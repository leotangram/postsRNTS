// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Screen 1 navigates on button press 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#00a528",
      "flex": 1,
    }
  }
  testID="cotainer"
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        Array [
          Object {
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#00a528",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "elevation": 0,
                  "flex": 1,
                  "shadowColor": "transparent",
                  "shadowOffset": Object {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            pointerEvents="box-none"
            style={
              Object {
                "height": 64,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "height": 20,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "marginHorizontal": 16,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "#ffffff",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  Posts
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              needsOffscreenAlphaCompositing={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "backgroundColor": "#f7f7f7",
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": -1,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 5,
                      "top": 0,
                      "width": 3,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        Object {
                          "backgroundColor": "#f7f7f7",
                        },
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View>
                        <Text
                          style={
                            Object {
                              "fontSize": 20,
                              "marginVertical": 16,
                              "textAlign": "center",
                            }
                          }
                        >
                          List of numbers from 1 to 20
                        </Text>
                        <RCTScrollView
                          data={
                            Array [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              10,
                              11,
                              12,
                              13,
                              14,
                              15,
                              16,
                              17,
                              18,
                              19,
                              20,
                            ]
                          }
                          disableVirtualization={false}
                          getItem={[Function]}
                          getItemCount={[Function]}
                          horizontal={false}
                          initialNumToRender={10}
                          keyExtractor={[Function]}
                          maxToRenderPerBatch={10}
                          onContentSizeChange={[Function]}
                          onEndReachedThreshold={2}
                          onLayout={[Function]}
                          onMomentumScrollEnd={[Function]}
                          onScroll={[Function]}
                          onScrollBeginDrag={[Function]}
                          onScrollEndDrag={[Function]}
                          removeClippedSubviews={false}
                          renderItem={[Function]}
                          scrollEventThrottle={50}
                          stickyHeaderIndices={Array []}
                          updateCellsBatchingPeriod={50}
                          viewabilityConfigCallbackPairs={Array []}
                          windowSize={21}
                        >
                          <View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <RNGestureHandlerButton
                                collapsable={false}
                                onGestureEvent={[Function]}
                                onGestureHandlerEvent={[Function]}
                                onGestureHandlerStateChange={[Function]}
                                onHandlerStateChange={[Function]}
                                rippleColor={0}
                              >
                                <View
                                  accessible={true}
                                  style={
                                    Object {
                                      "borderBottomColor": "#DDDDDD",
                                      "borderBottomWidth": 1,
                                      "opacity": 1,
                                      "paddingHorizontal": 24,
                                      "paddingVertical": 16,
                                    }
                                  }
                                >
                                  <Text>
                                    Item number 
                                    1
                                  </Text>
                                </View>
                              </RNGestureHandlerButton>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <RNGestureHandlerButton
                                collapsable={false}
                                onGestureEvent={[Function]}
                                onGestureHandlerEvent={[Function]}
                                onGestureHandlerStateChange={[Function]}
                                onHandlerStateChange={[Function]}
                                rippleColor={0}
                              >
                                <View
                                  accessible={true}
                                  style={
                                    Object {
                                      "borderBottomColor": "#DDDDDD",
                                      "borderBottomWidth": 1,
                                      "opacity": 1,
                                      "paddingHorizontal": 24,
                                      "paddingVertical": 16,
                                    }
                                  }
                                >
                                  <Text>
                                    Item number 
                                    2
                                  </Text>
                                </View>
                              </RNGestureHandlerButton>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <RNGestureHandlerButton
                                collapsable={false}
                                onGestureEvent={[Function]}
                                onGestureHandlerEvent={[Function]}
                                onGestureHandlerStateChange={[Function]}
                                onHandlerStateChange={[Function]}
                                rippleColor={0}
                              >
                                <View
                                  accessible={true}
                                  style={
                                    Object {
                                      "borderBottomColor": "#DDDDDD",
                                      "borderBottomWidth": 1,
                                      "opacity": 1,
                                      "paddingHorizontal": 24,
                                      "paddingVertical": 16,
                                    }
                                  }
                                >
                                  <Text>
                                    Item number 
                                    3
                                  </Text>
                                </View>
                              </RNGestureHandlerButton>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <RNGestureHandlerButton
                                collapsable={false}
                                onGestureEvent={[Function]}
                                onGestureHandlerEvent={[Function]}
                                onGestureHandlerStateChange={[Function]}
                                onHandlerStateChange={[Function]}
                                rippleColor={0}
                              >
                                <View
                                  accessible={true}
                                  style={
                                    Object {
                                      "borderBottomColor": "#DDDDDD",
                                      "borderBottomWidth": 1,
                                      "opacity": 1,
                                      "paddingHorizontal": 24,
                                      "paddingVertical": 16,
                                    }
                                  }
                                >
                                  <Text>
                                    Item number 
                                    4
                                  </Text>
                                </View>
                              </RNGestureHandlerButton>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <RNGestureHandlerButton
                                collapsable={false}
                                onGestureEvent={[Function]}
                                onGestureHandlerEvent={[Function]}
                                onGestureHandlerStateChange={[Function]}
                                onHandlerStateChange={[Function]}
                                rippleColor={0}
                              >
                                <View
                                  accessible={true}
                                  style={
                                    Object {
                                      "borderBottomColor": "#DDDDDD",
                                      "borderBottomWidth": 1,
                                      "opacity": 1,
                                      "paddingHorizontal": 24,
                                      "paddingVertical": 16,
                                    }
                                  }
                                >
                                  <Text>
                                    Item number 
                                    5
                                  </Text>
                                </View>
                              </RNGestureHandlerButton>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <RNGestureHandlerButton
                                collapsable={false}
                                onGestureEvent={[Function]}
                                onGestureHandlerEvent={[Function]}
                                onGestureHandlerStateChange={[Function]}
                                onHandlerStateChange={[Function]}
                                rippleColor={0}
                              >
                                <View
                                  accessible={true}
                                  style={
                                    Object {
                                      "borderBottomColor": "#DDDDDD",
                                      "borderBottomWidth": 1,
                                      "opacity": 1,
                                      "paddingHorizontal": 24,
                                      "paddingVertical": 16,
                                    }
                                  }
                                >
                                  <Text>
                                    Item number 
                                    6
                                  </Text>
                                </View>
                              </RNGestureHandlerButton>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <RNGestureHandlerButton
                                collapsable={false}
                                onGestureEvent={[Function]}
                                onGestureHandlerEvent={[Function]}
                                onGestureHandlerStateChange={[Function]}
                                onHandlerStateChange={[Function]}
                                rippleColor={0}
                              >
                                <View
                                  accessible={true}
                                  style={
                                    Object {
                                      "borderBottomColor": "#DDDDDD",
                                      "borderBottomWidth": 1,
                                      "opacity": 1,
                                      "paddingHorizontal": 24,
                                      "paddingVertical": 16,
                                    }
                                  }
                                >
                                  <Text>
                                    Item number 
                                    7
                                  </Text>
                                </View>
                              </RNGestureHandlerButton>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <RNGestureHandlerButton
                                collapsable={false}
                                onGestureEvent={[Function]}
                                onGestureHandlerEvent={[Function]}
                                onGestureHandlerStateChange={[Function]}
                                onHandlerStateChange={[Function]}
                                rippleColor={0}
                              >
                                <View
                                  accessible={true}
                                  style={
                                    Object {
                                      "borderBottomColor": "#DDDDDD",
                                      "borderBottomWidth": 1,
                                      "opacity": 1,
                                      "paddingHorizontal": 24,
                                      "paddingVertical": 16,
                                    }
                                  }
                                >
                                  <Text>
                                    Item number 
                                    8
                                  </Text>
                                </View>
                              </RNGestureHandlerButton>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <RNGestureHandlerButton
                                collapsable={false}
                                onGestureEvent={[Function]}
                                onGestureHandlerEvent={[Function]}
                                onGestureHandlerStateChange={[Function]}
                                onHandlerStateChange={[Function]}
                                rippleColor={0}
                              >
                                <View
                                  accessible={true}
                                  style={
                                    Object {
                                      "borderBottomColor": "#DDDDDD",
                                      "borderBottomWidth": 1,
                                      "opacity": 1,
                                      "paddingHorizontal": 24,
                                      "paddingVertical": 16,
                                    }
                                  }
                                >
                                  <Text>
                                    Item number 
                                    9
                                  </Text>
                                </View>
                              </RNGestureHandlerButton>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <RNGestureHandlerButton
                                collapsable={false}
                                onGestureEvent={[Function]}
                                onGestureHandlerEvent={[Function]}
                                onGestureHandlerStateChange={[Function]}
                                onHandlerStateChange={[Function]}
                                rippleColor={0}
                              >
                                <View
                                  accessible={true}
                                  style={
                                    Object {
                                      "borderBottomColor": "#DDDDDD",
                                      "borderBottomWidth": 1,
                                      "opacity": 1,
                                      "paddingHorizontal": 24,
                                      "paddingVertical": 16,
                                    }
                                  }
                                >
                                  <Text>
                                    Item number 
                                    10
                                  </Text>
                                </View>
                              </RNGestureHandlerButton>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 0,
                                }
                              }
                            />
                          </View>
                        </RCTScrollView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </RNCSafeAreaProvider>
  </View>
</RCTSafeAreaView>
`;
